import type { TabbableOptions } from '../commands/tabbable.interfaces.js';
export interface ClassOptions {
    /**
     * Class options
     */
    addressBarShadowPadding?: number;
    autoElementScroll?: boolean;
    addIOSBezelCorners?: boolean;
    clearRuntimeFolder?: boolean;
    formatImageName?: string;
    isHybridApp?: boolean;
    savePerInstance?: boolean;
    toolBarShadowPadding?: number;
    waitForFontsLoaded?: boolean;
    /**
     * Baseline options
     */
    autoSaveBaseline?: boolean;
    screenshotPath?: string | ((options: ClassOptions) => string);
    baselineFolder?: string | ((options: ClassOptions) => string);
    /**
     * Class and method options
     */
    disableBlinkingCursor?: boolean;
    disableCSSAnimation?: boolean;
    enableLayoutTesting?: boolean;
    fullPageScrollTimeout?: number;
    hideScrollBars?: boolean;
    /**
     * Compare options
     */
    blockOutSideBar?: boolean;
    blockOutStatusBar?: boolean;
    blockOutToolBar?: boolean;
    createJsonReportFiles?: boolean;
    diffPixelBoundingBoxProximity?: number;
    ignoreAlpha?: boolean;
    ignoreAntialiasing?: boolean;
    ignoreColors?: boolean;
    ignoreLess?: boolean;
    ignoreNothing?: boolean;
    rawMisMatchPercentage?: boolean;
    returnAllCompareData?: boolean;
    saveAboveTolerance?: number;
    scaleImagesToSameSize?: boolean;
    /**
     * Tabbable options
     */
    tabbableOptions?: TabbableOptions;
    /**
     * Storybook options
     */
    storybook?: {
        clip?: boolean;
        clipSelector?: string;
        numShards?: number;
        skipStories?: string | string[];
        url?: string;
        version?: number;
        /**
         * Additional search parameters to be added to the Storybook URL
         *
         * @example { additionalSearchParams: new URLSearchParams({ 'foo': 'bar' }) }
         * This will generate the following Storybook URL for stories test: `http://storybook.url/iframe.html?id=story-id&foo=bar`
         *
         */
        additionalSearchParams?: URLSearchParams;
        /**
         * Path builder for the story baseline
         *
         * @param category The component category (e.g. "forms" when the story is "Forms/Input")
         * @param component The component name (e.g. "input" when the story is "Forms/Input")
         * @returns The path where the baseline will be saved, under the `baselineFolder` folder.
         *
         * @example (category, component) => `${category}__${component}`
         * @default (category, component) => `./${category}/${component}/`
         */
        getStoriesBaselinePath?: (category: string, component: string) => string;
    };
}
export interface DefaultOptions {
    addressBarShadowPadding: number;
    autoElementScroll: boolean;
    addIOSBezelCorners: boolean;
    autoSaveBaseline: boolean;
    clearFolder: boolean;
    compareOptions: CompareOptions;
    disableBlinkingCursor: boolean;
    disableCSSAnimation: boolean;
    enableLayoutTesting: boolean;
    formatImageName: string;
    fullPageScrollTimeout: number;
    hideScrollBars: boolean;
    isHybridApp: boolean;
    savePerInstance: boolean;
    tabbableOptions: TabbableOptions;
    toolBarShadowPadding: number;
    waitForFontsLoaded: boolean;
}
interface CompareOptions {
    blockOutSideBar: boolean;
    blockOutStatusBar: boolean;
    blockOutToolBar: boolean;
    createJsonReportFiles: boolean;
    diffPixelBoundingBoxProximity: number;
    ignoreAlpha: boolean;
    ignoreAntialiasing: boolean;
    ignoreColors: boolean;
    ignoreLess: boolean;
    ignoreNothing: boolean;
    rawMisMatchPercentage: boolean;
    returnAllCompareData: boolean;
    saveAboveTolerance: number;
    scaleImagesToSameSize: boolean;
}
export {};
//# sourceMappingURL=options.interfaces.d.ts.map